""" Dictionary containing the albumentations functions used to implement all the candidate corruptions """

import albumentations as album
import torchvision
from albumentations.pytorch import ToTensor, ToTensorV2

dict_corruptions = {}
dict_corruptions["Affines"] = album.IAAAffine(p=1, scale=(0.6, 0.8))
dict_corruptions["Blur"] = album.augmentations.transforms.Blur(p=1, blur_limit=(5, 9))
dict_corruptions["Border"] = album.Compose([album.augmentations.transforms.CenterCrop(130,130,p=1),album.transforms.PadIfNeeded(224,224,border_mode=0,value=0)])
dict_corruptions["ChannelDropout"] = album.augmentations.transforms.ChannelDropout(p=1)
dict_corruptions["CoarseDropout"] = album.augmentations.transforms.CoarseDropout(p=1, min_holes=16, max_holes=48)
dict_corruptions["ColorJitter"] = album.augmentations.transforms.ColorJitter(p=1, brightness=0.7, contrast=0.7, saturation=0.7, hue=0.7)
dict_corruptions["Cutout"] = album.augmentations.transforms.Cutout(num_holes=1, max_h_size=150, max_w_size=150,p=1)
dict_corruptions["Downscale"] = album.augmentations.transforms.Downscale(p=1,scale_min=0.45, scale_max=0.45)
dict_corruptions["ElasticTransform"] = album.transforms.ElasticTransform(p=1, border_mode=1, value=0)
dict_corruptions["Emboss"] = album.IAAEmboss(p=1, alpha=(1.0, 1.0))
dict_corruptions["Flip"] = album.augmentations.transforms.Flip(p=1)
dict_corruptions["GaussianBlur"] = album.augmentations.transforms.GaussianBlur(p=1, blur_limit=(9, 13))
dict_corruptions["GaussNoise"] = album.augmentations.transforms.GaussNoise(p=1, var_limit=(500.0, 1000.0), mean=0)
dict_corruptions["GridDistortion"] = album.augmentations.transforms.GridDistortion(p=1, distort_limit=1)
dict_corruptions["HueSaturationValue"] = album.augmentations.transforms.HueSaturationValue(p=1, hue_shift_limit=100, sat_shift_limit=150, val_shift_limit=100)
dict_corruptions["ImageCompression"] = album.augmentations.transforms.ImageCompression(p=1, quality_lower=5, quality_upper=15)
dict_corruptions["InvertImg"] = album.augmentations.transforms.InvertImg(p=1)
dict_corruptions["ISONoise"] = album.augmentations.transforms.ISONoise(p=1, color_shift=(0.2, 0.5), intensity=(0.5, 1.0))
dict_corruptions["JpegCompression"] = album.augmentations.transforms.JpegCompression(p=1, quality_lower=5, quality_upper=15)
dict_corruptions["MedianBlur"] = album.augmentations.transforms.MedianBlur(p=1, blur_limit=(5, 11))
dict_corruptions["MotionBlur"] = album.augmentations.transforms.MotionBlur(p=1, blur_limit=(11, 17))
dict_corruptions["MultiplicativeNoise"] = album.augmentations.transforms.MultiplicativeNoise(p=1, multiplier=(0.7, 1.3), elementwise=True)
dict_corruptions["OpticalDistortion"] = album.augmentations.transforms.OpticalDistortion(p=1, distort_limit=4, shift_limit=4)
dict_corruptions["Perspective"] = album.IAAPerspective(p=1, scale=(0.1, 0.3))
dict_corruptions["Posterize"] = album.augmentations.transforms.Posterize(p=1, num_bits=2)
dict_corruptions["RandomBrightness"] = album.augmentations.transforms.RandomBrightness(p=1, limit=0.9)
dict_corruptions["RandomContrast"] = album.augmentations.transforms.RandomContrast(p=1, limit=1.5)
dict_corruptions["RandomFog"] = album.augmentations.transforms.RandomFog(p=1, fog_coef_lower=0.8)
dict_corruptions["RandomGamma"] = album.augmentations.transforms.RandomGamma(p=1, gamma_limit=(300, 1000))
dict_corruptions["RandomGridShuffle"] = album.augmentations.transforms.RandomGridShuffle(p=1, grid=(4, 4))
dict_corruptions["RandomRain"] = album.augmentations.transforms.RandomRain(p=1)
dict_corruptions["RandomShadow"] = album.augmentations.transforms.RandomShadow(p=1, shadow_roi=(0, 0, 1, 1), num_shadows_lower=2, num_shadows_upper=4, shadow_dimension=8)
dict_corruptions["RandomSnow"] = album.augmentations.transforms.RandomSnow(p=1)
dict_corruptions["RandomSunFlare"] = album.augmentations.transforms.RandomSunFlare(p=1,src_radius=200)
dict_corruptions["RGBShift"] = album.augmentations.transforms.RGBShift(p=1, r_shift_limit=200, g_shift_limit=200, b_shift_limit=200)
dict_corruptions["Rotate"] = album.augmentations.transforms.Rotate(p=1, limit=180)
dict_corruptions["Sharpen"] = album.IAASharpen(p=1, alpha=(0.3, 0.6), lightness=(0.6, 1.0))
dict_corruptions["Solarize"] = album.augmentations.transforms.Solarize(p=1, threshold=200)
dict_corruptions["ToSepia"] = album.augmentations.transforms.ToSepia(p=1)
dict_corruptions["Transpose"] = album.transforms.ShiftScaleRotate(shift_limit=0.7,scale_limit=0.0,rotate_limit=0.0, p=1)
